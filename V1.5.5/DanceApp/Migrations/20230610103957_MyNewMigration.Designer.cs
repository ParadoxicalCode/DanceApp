// <auto-generated />
using System;
using DanceApp.Model.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DanceApp.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20230610103957_MyNewMigration")]
    partial class MyNewMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.2");

            modelBuilder.Entity("DanceApp.Model.Data.AgeCategory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("AgeCategories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Title = "Дети 0"
                        },
                        new
                        {
                            ID = 2,
                            Title = "Дети 1"
                        },
                        new
                        {
                            ID = 3,
                            Title = "Дети 2"
                        },
                        new
                        {
                            ID = 4,
                            Title = "Юниоры 1"
                        },
                        new
                        {
                            ID = 5,
                            Title = "Юниоры 2"
                        },
                        new
                        {
                            ID = 6,
                            Title = "Молодёжь"
                        },
                        new
                        {
                            ID = 7,
                            Title = "Взрослые"
                        },
                        new
                        {
                            ID = 8,
                            Title = "Сеньоры"
                        });
                });

            modelBuilder.Entity("DanceApp.Model.Data.Competition", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("CountingCommission")
                        .HasColumnType("TEXT");

                    b.Property<string>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Fraction")
                        .HasColumnType("TEXT");

                    b.Property<string>("MainJudge")
                        .HasColumnType("TEXT");

                    b.Property<string>("Manager")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rank")
                        .HasColumnType("TEXT");

                    b.Property<bool>("RegistrationStatus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SiteCapacity")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TourID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("TourID");

                    b.ToTable("Competitions");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            City = "Новосибирск",
                            CountingCommission = "Петров Михаил Борисович",
                            Date = "2023.06.14",
                            Fraction = "7/10",
                            MainJudge = "Журавлёв Денис Тимурович",
                            Manager = "Печурин Р.К.",
                            Rank = "Межрегиональный турнир",
                            RegistrationStatus = true,
                            SiteCapacity = "10"
                        });
                });

            modelBuilder.Entity("DanceApp.Model.Data.Dance", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SportsDiscipline")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Dances");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ShortName = "W",
                            SportsDiscipline = "Европейская программа",
                            Title = "Медленный вальс"
                        },
                        new
                        {
                            ID = 2,
                            ShortName = "T",
                            SportsDiscipline = "Европейская программа",
                            Title = "Танго"
                        },
                        new
                        {
                            ID = 3,
                            ShortName = "Vv",
                            SportsDiscipline = "Европейская программа",
                            Title = "Венский вальс"
                        },
                        new
                        {
                            ID = 4,
                            ShortName = "SF",
                            SportsDiscipline = "Европейская программа",
                            Title = "Фокстрот"
                        },
                        new
                        {
                            ID = 5,
                            ShortName = "Q",
                            SportsDiscipline = "Европейская программа",
                            Title = "Квикстеп"
                        },
                        new
                        {
                            ID = 6,
                            ShortName = "S",
                            SportsDiscipline = "Латиноамериканская программа",
                            Title = "Самба"
                        },
                        new
                        {
                            ID = 7,
                            ShortName = "Ch",
                            SportsDiscipline = "Латиноамериканская программа",
                            Title = "Ча-ча-ча"
                        },
                        new
                        {
                            ID = 8,
                            ShortName = "R",
                            SportsDiscipline = "Латиноамериканская программа",
                            Title = "Румба"
                        },
                        new
                        {
                            ID = 9,
                            ShortName = "Pd",
                            SportsDiscipline = "Латиноамериканская программа",
                            Title = "Пасодобль"
                        },
                        new
                        {
                            ID = 10,
                            ShortName = "J",
                            SportsDiscipline = "Латиноамериканская программа",
                            Title = "Джайв"
                        });
                });

            modelBuilder.Entity("DanceApp.Model.Data.DancesInGroup", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DanceID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GroupID")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Select")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("DanceID");

                    b.HasIndex("GroupID");

                    b.ToTable("DancesInGroup");
                });

            modelBuilder.Entity("DanceApp.Model.Data.Group", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AgeCategory1")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AgeCategory2")
                        .HasColumnType("TEXT");

                    b.Property<string>("Number")
                        .HasColumnType("TEXT");

                    b.Property<int>("PairsCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PerformanceType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Program")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SportsDiscipline")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TourID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("TourID");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("DanceApp.Model.Data.Judge", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<char>("Character")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Club")
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Patronymic")
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Judges");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Character = 'A',
                            City = "Новосибирск",
                            Club = "Орион",
                            Country = "Россия",
                            Name = "Михаил",
                            Patronymic = "Борисович",
                            Surname = "Петров"
                        },
                        new
                        {
                            ID = 2,
                            Character = 'B',
                            City = "Новосибирск",
                            Club = "Орион",
                            Country = "Россия",
                            Name = "Варвара",
                            Patronymic = "Сергеевна",
                            Surname = "Зуева"
                        },
                        new
                        {
                            ID = 3,
                            Character = 'C',
                            City = "Новосибирск",
                            Club = "Орион",
                            Country = "Россия",
                            Name = "Михаил",
                            Patronymic = "Сергеевич",
                            Surname = "Семёнов"
                        },
                        new
                        {
                            ID = 4,
                            Character = 'D',
                            City = "Новосибирск",
                            Club = "Орион",
                            Country = "Россия",
                            Name = "Денис",
                            Patronymic = "Тимурович",
                            Surname = "Журавлёв"
                        },
                        new
                        {
                            ID = 5,
                            Character = 'E',
                            City = "Новосибирск",
                            Club = "Орион",
                            Country = "Россия",
                            Name = "Анна",
                            Patronymic = "Егоровна",
                            Surname = "Фролова"
                        },
                        new
                        {
                            ID = 6,
                            Character = 'F',
                            City = "Новосибирск",
                            Club = "Ночные лебеди",
                            Country = "Россия",
                            Name = "Екатерина",
                            Patronymic = "Семёновна",
                            Surname = "Новикова"
                        },
                        new
                        {
                            ID = 7,
                            Character = 'G',
                            City = "Новосибирск",
                            Club = "Ночные лебеди",
                            Country = "Россия",
                            Name = "Кирилл",
                            Patronymic = "Фёдорович",
                            Surname = "Николаев"
                        },
                        new
                        {
                            ID = 8,
                            Character = 'H',
                            City = "Новосибирск",
                            Club = "",
                            Country = "Россия",
                            Name = "Марк",
                            Patronymic = "Романович",
                            Surname = "Симонов"
                        },
                        new
                        {
                            ID = 9,
                            Character = 'I',
                            City = "Новосибирск",
                            Club = "Ночные лебеди",
                            Country = "Россия",
                            Name = "Василиса",
                            Patronymic = "Николаевна",
                            Surname = "Кузнецова"
                        });
                });

            modelBuilder.Entity("DanceApp.Model.Data.JudgesInPerformance", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DanceID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GroupID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("JudgeID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PerformanceNumber")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("DanceID");

                    b.HasIndex("GroupID");

                    b.HasIndex("JudgeID");

                    b.ToTable("JudgesInPerformance");
                });

            modelBuilder.Entity("DanceApp.Model.Data.Pair", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AgeCategoryID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Club")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FemaleBirthday")
                        .HasColumnType("TEXT");

                    b.Property<string>("FemaleName")
                        .HasColumnType("TEXT");

                    b.Property<string>("FemalePatronymic")
                        .HasColumnType("TEXT");

                    b.Property<string>("FemaleSurname")
                        .HasColumnType("TEXT");

                    b.Property<string>("MaleBirthday")
                        .HasColumnType("TEXT");

                    b.Property<string>("MaleName")
                        .HasColumnType("TEXT");

                    b.Property<string>("MalePatronymic")
                        .HasColumnType("TEXT");

                    b.Property<string>("MaleSurname")
                        .HasColumnType("TEXT");

                    b.Property<string>("Number")
                        .HasColumnType("TEXT");

                    b.Property<string>("PerformanceType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Trainer1")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Trainer2")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("AgeCategoryID");

                    b.ToTable("Pairs");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AgeCategoryID = 7,
                            City = "Новосибирск",
                            Club = "Орион",
                            Country = "Россия",
                            FemaleBirthday = "2001.02.19",
                            FemaleName = "Анастасия",
                            FemalePatronymic = "Руслановна",
                            FemaleSurname = "Морозова",
                            MaleBirthday = "",
                            MaleName = "",
                            MalePatronymic = "",
                            MaleSurname = "",
                            Number = "31",
                            PerformanceType = "Соло",
                            Trainer1 = "Николаев К.Л.",
                            Trainer2 = ""
                        },
                        new
                        {
                            ID = 2,
                            AgeCategoryID = 7,
                            City = "Новосибирск",
                            Club = "Орион",
                            Country = "Россия",
                            FemaleBirthday = "2001.02.19",
                            FemaleName = "Маргарита",
                            FemalePatronymic = "Михайловна",
                            FemaleSurname = "Макеева",
                            MaleBirthday = "",
                            MaleName = "",
                            MalePatronymic = "",
                            MaleSurname = "",
                            Number = "39",
                            PerformanceType = "Соло",
                            Trainer1 = "Кузнецова Е.С.",
                            Trainer2 = ""
                        },
                        new
                        {
                            ID = 3,
                            AgeCategoryID = 7,
                            City = "Новосибирск",
                            Club = "Орион",
                            Country = "Россия",
                            FemaleBirthday = "2001.02.19",
                            FemaleName = "Наталья",
                            FemalePatronymic = "Вадимовна",
                            FemaleSurname = "Афанасьева",
                            MaleBirthday = "2001.02.19",
                            MaleName = "Павел",
                            MalePatronymic = "Михайлович",
                            MaleSurname = "Юдин",
                            Number = "47",
                            PerformanceType = "Пара",
                            Trainer1 = "Фролова А.В.",
                            Trainer2 = ""
                        },
                        new
                        {
                            ID = 4,
                            AgeCategoryID = 7,
                            City = "Новосибирск",
                            Club = "Орион",
                            Country = "Россия",
                            FemaleBirthday = "2001.02.19",
                            FemaleName = "Алла",
                            FemalePatronymic = "Ильична",
                            FemaleSurname = "Соловьёва",
                            MaleBirthday = "2001.02.19",
                            MaleName = "Георгий",
                            MalePatronymic = "Иванович",
                            MaleSurname = "Алешин",
                            Number = "21",
                            PerformanceType = "Пара",
                            Trainer1 = "Лобанова Д.С.",
                            Trainer2 = ""
                        },
                        new
                        {
                            ID = 5,
                            AgeCategoryID = 7,
                            City = "Новосибирск",
                            Club = "Алые розы",
                            Country = "Россия",
                            FemaleBirthday = "2001.02.19",
                            FemaleName = "София",
                            FemalePatronymic = "Степановна",
                            FemaleSurname = "Волкова",
                            MaleBirthday = "2001.02.19",
                            MaleName = "Дмитрий",
                            MalePatronymic = "Александрович",
                            MaleSurname = "Любимов",
                            Number = "4",
                            PerformanceType = "Пара",
                            Trainer1 = "Новикова И.Т",
                            Trainer2 = ""
                        },
                        new
                        {
                            ID = 6,
                            AgeCategoryID = 7,
                            City = "Новосибирск",
                            Club = "Алые розы",
                            Country = "Россия",
                            FemaleBirthday = "2001.02.19",
                            FemaleName = "Диана",
                            FemalePatronymic = "Богдановна",
                            FemaleSurname = "Куликова",
                            MaleBirthday = "2001.02.19",
                            MaleName = "Виктор",
                            MalePatronymic = "",
                            MaleSurname = "Семенов",
                            Number = "8",
                            PerformanceType = "Пара",
                            Trainer1 = "Кузнецова К.Р",
                            Trainer2 = ""
                        },
                        new
                        {
                            ID = 7,
                            AgeCategoryID = 7,
                            City = "Новосибирск",
                            Club = "Алые розы",
                            Country = "Россия",
                            FemaleBirthday = "2001.02.19",
                            FemaleName = "Светлана",
                            FemalePatronymic = "Ильинична",
                            FemaleSurname = "Колосова",
                            MaleBirthday = "2001.02.19",
                            MaleName = "Станислав",
                            MalePatronymic = "Львович",
                            MaleSurname = "Смирнов",
                            Number = "10",
                            PerformanceType = "Пара",
                            Trainer1 = "Симонов К.А.",
                            Trainer2 = ""
                        },
                        new
                        {
                            ID = 8,
                            AgeCategoryID = 7,
                            City = "Новосибирск",
                            Club = "Алые розы",
                            Country = "Россия",
                            FemaleBirthday = "2001.02.19",
                            FemaleName = "Анастасия",
                            FemalePatronymic = "Григорьевна",
                            FemaleSurname = "Фадеева",
                            MaleBirthday = "2001.02.19",
                            MaleName = "Евгений",
                            MalePatronymic = "Сергеевич",
                            MaleSurname = "Кузнецов",
                            Number = "13",
                            PerformanceType = "Пара",
                            Trainer1 = "Николаев К.Л.",
                            Trainer2 = ""
                        },
                        new
                        {
                            ID = 9,
                            AgeCategoryID = 7,
                            City = "Новосибирск",
                            Club = "Алые розы",
                            Country = "Россия",
                            FemaleBirthday = "2001.02.19",
                            FemaleName = "Мария",
                            FemalePatronymic = "Марковна",
                            FemaleSurname = "Синицина",
                            MaleBirthday = "2001.02.19",
                            MaleName = "Борис",
                            MalePatronymic = "Дмитриевич",
                            MaleSurname = "Карасев",
                            Number = "6",
                            PerformanceType = "Пара",
                            Trainer1 = "Лобанова Д.С.",
                            Trainer2 = ""
                        },
                        new
                        {
                            ID = 10,
                            AgeCategoryID = 7,
                            City = "Новосибирск",
                            Club = "Ночные лебеди",
                            Country = "Россия",
                            FemaleBirthday = "2001.02.19",
                            FemaleName = "Анна",
                            FemalePatronymic = "Дмитриевна",
                            FemaleSurname = "Захарова",
                            MaleBirthday = "2001.02.19",
                            MaleName = "Максим",
                            MalePatronymic = "Иванович",
                            MaleSurname = "Кириллов",
                            Number = "29",
                            PerformanceType = "Пара",
                            Trainer1 = "Симонов К.А.",
                            Trainer2 = ""
                        },
                        new
                        {
                            ID = 11,
                            AgeCategoryID = 7,
                            City = "Новосибирск",
                            Club = "Ночные лебеди",
                            Country = "Россия",
                            FemaleBirthday = "2001.02.19",
                            FemaleName = "Дарья",
                            FemalePatronymic = "Дамировна",
                            FemaleSurname = "Гуляева",
                            MaleBirthday = "2001.02.19",
                            MaleName = "Фёдор",
                            MalePatronymic = "Михайлович",
                            MaleSurname = "Попов",
                            Number = "34",
                            PerformanceType = "Пара",
                            Trainer1 = "Лобанова Д.С.",
                            Trainer2 = ""
                        });
                });

            modelBuilder.Entity("DanceApp.Model.Data.PairsInGroup", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GroupID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PairID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("GroupID");

                    b.HasIndex("PairID");

                    b.ToTable("PairsInGroup");
                });

            modelBuilder.Entity("DanceApp.Model.Data.PairsInPerformance", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DanceID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GroupID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PairID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PerformanceNumber")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("DanceID");

                    b.HasIndex("GroupID");

                    b.HasIndex("PairID");

                    b.ToTable("PairsInPerformance");
                });

            modelBuilder.Entity("DanceApp.Model.Data.PairsInTour", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PairID")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Select")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TourID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("PairID");

                    b.HasIndex("TourID");

                    b.ToTable("PairsInTour");
                });

            modelBuilder.Entity("DanceApp.Model.Data.PerformancesInDance", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DanceID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DanceInGroupID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PerformanceNumber")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("DanceID");

                    b.HasIndex("DanceInGroupID");

                    b.ToTable("PerformancesInDance");
                });

            modelBuilder.Entity("DanceApp.Model.Data.Tour", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Tours");
                });

            modelBuilder.Entity("DanceApp.Model.Data.Competition", b =>
                {
                    b.HasOne("DanceApp.Model.Data.Tour", "Tour")
                        .WithMany("Competition")
                        .HasForeignKey("TourID");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("DanceApp.Model.Data.DancesInGroup", b =>
                {
                    b.HasOne("DanceApp.Model.Data.Dance", "Dance")
                        .WithMany("DancesInGroup")
                        .HasForeignKey("DanceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DanceApp.Model.Data.Group", "Group")
                        .WithMany("DancesInGroup")
                        .HasForeignKey("GroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dance");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("DanceApp.Model.Data.Group", b =>
                {
                    b.HasOne("DanceApp.Model.Data.Tour", "Tour")
                        .WithMany("Group")
                        .HasForeignKey("TourID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("DanceApp.Model.Data.JudgesInPerformance", b =>
                {
                    b.HasOne("DanceApp.Model.Data.Dance", "Dance")
                        .WithMany("JudgesInPerformance")
                        .HasForeignKey("DanceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DanceApp.Model.Data.Group", "Group")
                        .WithMany("JudgesInPerformance")
                        .HasForeignKey("GroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DanceApp.Model.Data.Judge", "Judge")
                        .WithMany("JudgesInPerformance")
                        .HasForeignKey("JudgeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dance");

                    b.Navigation("Group");

                    b.Navigation("Judge");
                });

            modelBuilder.Entity("DanceApp.Model.Data.Pair", b =>
                {
                    b.HasOne("DanceApp.Model.Data.AgeCategory", "AgeCategory")
                        .WithMany("Pair")
                        .HasForeignKey("AgeCategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AgeCategory");
                });

            modelBuilder.Entity("DanceApp.Model.Data.PairsInGroup", b =>
                {
                    b.HasOne("DanceApp.Model.Data.Group", "Group")
                        .WithMany("PairsInGroup")
                        .HasForeignKey("GroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DanceApp.Model.Data.Pair", "Pair")
                        .WithMany("PairsInGroup")
                        .HasForeignKey("PairID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Pair");
                });

            modelBuilder.Entity("DanceApp.Model.Data.PairsInPerformance", b =>
                {
                    b.HasOne("DanceApp.Model.Data.Dance", "Dance")
                        .WithMany("PairsInPerformance")
                        .HasForeignKey("DanceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DanceApp.Model.Data.Group", "Group")
                        .WithMany("PairsInPerformance")
                        .HasForeignKey("GroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DanceApp.Model.Data.Pair", "Pair")
                        .WithMany("PairsInPerformance")
                        .HasForeignKey("PairID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dance");

                    b.Navigation("Group");

                    b.Navigation("Pair");
                });

            modelBuilder.Entity("DanceApp.Model.Data.PairsInTour", b =>
                {
                    b.HasOne("DanceApp.Model.Data.Pair", "Pair")
                        .WithMany("PairsInTour")
                        .HasForeignKey("PairID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DanceApp.Model.Data.Tour", "Tour")
                        .WithMany("PairsInTour")
                        .HasForeignKey("TourID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pair");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("DanceApp.Model.Data.PerformancesInDance", b =>
                {
                    b.HasOne("DanceApp.Model.Data.Dance", null)
                        .WithMany("PerformancesInDance")
                        .HasForeignKey("DanceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DanceApp.Model.Data.DancesInGroup", "DanceInGroup")
                        .WithMany()
                        .HasForeignKey("DanceInGroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DanceInGroup");
                });

            modelBuilder.Entity("DanceApp.Model.Data.AgeCategory", b =>
                {
                    b.Navigation("Pair");
                });

            modelBuilder.Entity("DanceApp.Model.Data.Dance", b =>
                {
                    b.Navigation("DancesInGroup");

                    b.Navigation("JudgesInPerformance");

                    b.Navigation("PairsInPerformance");

                    b.Navigation("PerformancesInDance");
                });

            modelBuilder.Entity("DanceApp.Model.Data.Group", b =>
                {
                    b.Navigation("DancesInGroup");

                    b.Navigation("JudgesInPerformance");

                    b.Navigation("PairsInGroup");

                    b.Navigation("PairsInPerformance");
                });

            modelBuilder.Entity("DanceApp.Model.Data.Judge", b =>
                {
                    b.Navigation("JudgesInPerformance");
                });

            modelBuilder.Entity("DanceApp.Model.Data.Pair", b =>
                {
                    b.Navigation("PairsInGroup");

                    b.Navigation("PairsInPerformance");

                    b.Navigation("PairsInTour");
                });

            modelBuilder.Entity("DanceApp.Model.Data.Tour", b =>
                {
                    b.Navigation("Competition");

                    b.Navigation("Group");

                    b.Navigation("PairsInTour");
                });
#pragma warning restore 612, 618
        }
    }
}
